name: Swift Unit Tests

on:
  workflow_dispatch:

  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened]

env:
  RESULT_BUNDLE: TestResults.xcresult

# Limit permissions to only what is necessary for the workflow
permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  test:
    name: Run Unit Tests
    runs-on: macos-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@60606e260d2fc5762a71e64e74b2174e8ea3c8bd # v1.6.0
        with:
          xcode-version: latest-stable

      # Cache di CocoaPods
      - name: Cache CocoaPods
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: |
            IOWalletProximityExample/Pods
            ~/Library/Caches/CocoaPods
          key: ${{ runner.os }}-pods-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-

      # Cache di Swift Package Manager
      - name: Cache Swift packages
        uses: actions/cache@5a3ec84eff668545956fd18022155c47e93e2684 # v4.2.3
        with:
          path: .build
          key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ runner.os }}-spm-

      - name: Install Dependencies
        run: |
          gem install cocoapods cocoapods-spm
          cd IOWalletProximityExample
          pod install --repo-update

      - name: Run Unit Tests
        run: |
          xcodebuild test \
            -project IOWalletProximity/IOWalletProximity.xcodeproj \
            -scheme IOWalletProximity \
            -destination 'platform=iOS Simulator,name=iPhone 15,OS=17.0.1' \
            -resultBundlePath ${{ env.RESULT_BUNDLE }} \
            -enableCodeCoverage YES | xcpretty

      - name: Convert XCResult → JUnit XML
        run: |
          brew tap a7ex/homebrew-formulae
          brew install xcresultparser
          xcresultparser -o junit ${{ env.RESULT_BUNDLE }} > junit-results.xml

      - name: Publish JUnit summary
        uses: dorny/test-reporter@31a54ee7ebcacc03a09ea97a7e5465a47b84aea5
        with:
          name: iOS Unit Tests
          path: junit-results.xml
          reporter: java-junit

      - name: Upload Test Results
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        if: always()
        with:
          name: test-results
          path: |
            ${{ env.RESULT_BUNDLE }}
          retention-days: 7
          if-no-files-found: error # ← makes the step (and job) fail

      - name: Report Test Status
        if: always()
        run: |
          if [ ${{ job.status }} == "failure" ]; then
            echo "::error::Unit tests failed. Please check the logs for details."
            exit 1
          fi
